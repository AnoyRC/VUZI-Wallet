/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    VUZI: {
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "currentNonce",
              type: "uint256",
            },
          ],
          name: "InvalidAccountNonce",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          stateMutability: "payable",
          type: "fallback",
        },
        {
          inputs: [],
          name: "VUZI_FACTORY",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VUZI_NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_useNonce",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "_passwordHash",
              type: "uint256[2]",
            },
          ],
          name: "changePassword",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "func",
              type: "bytes",
            },
          ],
          name: "execute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "dest",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "value",
              type: "uint256[]",
            },
            {
              internalType: "bytes[]",
              name: "func",
              type: "bytes[]",
            },
          ],
          name: "executeBatch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getNonce",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_vuziFactory",
              type: "address",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256[2]",
              name: "_passwordHash",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[4]",
              name: "_recoveryHashes",
              type: "uint256[4]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "onERC1155BatchReceived",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "onERC1155Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "passwordHash",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "recoveryHashes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "tokensReceived",
          outputs: [],
          stateMutability: "pure",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: "contracts/callback/TokenCallbackHandler.sol",
        onERC1155Received: "contracts/callback/TokenCallbackHandler.sol",
        onERC721Received: "contracts/callback/TokenCallbackHandler.sol",
        supportsInterface: "contracts/callback/TokenCallbackHandler.sol",
        tokensReceived: "contracts/callback/TokenCallbackHandler.sol",
      },
    },
    VUZIFactory: {
      address: "0x9A676e781A523b5d0C0e43731313A708CB607508",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_trustedForwarder",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "VUZINameToDetails",
          outputs: [
            {
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
            {
              internalType: "bool",
              name: "isUsed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "accountImplementation",
          outputs: [
            {
              internalType: "contract VUZI",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "a",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "X",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "Y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "b",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "c",
                  type: "tuple",
                },
              ],
              internalType: "struct RecoveryVerifier.Proof",
              name: "proof",
              type: "tuple",
            },
            {
              internalType: "uint256[2]",
              name: "_passwordHash",
              type: "uint256[2]",
            },
          ],
          name: "changePasscode",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256[2]",
              name: "_passwordHash",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[4]",
              name: "_recoveryHashes",
              type: "uint256[4]",
            },
            {
              internalType: "uint256",
              name: "salt",
              type: "uint256",
            },
          ],
          name: "createAccount",
          outputs: [
            {
              internalType: "contract VUZI",
              name: "ret",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "a",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "X",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "Y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG2Point",
                  name: "b",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "c",
                  type: "tuple",
                },
              ],
              internalType: "struct PasscodeVerifier.PasscodeProof",
              name: "proof",
              type: "tuple",
            },
            {
              internalType: "address[]",
              name: "dest",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "value",
              type: "uint256[]",
            },
            {
              internalType: "bytes[]",
              name: "func",
              type: "bytes[]",
            },
          ],
          name: "executeBatchVUZITx",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "a",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "X",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "Y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG2Point",
                  name: "b",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "c",
                  type: "tuple",
                },
              ],
              internalType: "struct PasscodeVerifier.PasscodeProof",
              name: "proof",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "func",
              type: "bytes",
            },
          ],
          name: "executeVUZITx",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256[2]",
              name: "_passwordHash",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[4]",
              name: "_recoveryHashes",
              type: "uint256[4]",
            },
            {
              internalType: "uint256",
              name: "salt",
              type: "uint256",
            },
          ],
          name: "getAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          name: "getVuzi",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "walletAddress",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "isUsed",
                  type: "bool",
                },
              ],
              internalType: "struct VUZIStorage.VUZIDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "forwarder",
              type: "address",
            },
          ],
          name: "isTrustedForwarder",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "a",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "X",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "Y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG2Point",
                  name: "b",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "c",
                  type: "tuple",
                },
              ],
              internalType: "struct PasscodeVerifier.PasscodeProof",
              name: "proof",
              type: "tuple",
            },
            {
              internalType: "uint256[4]",
              name: "input",
              type: "uint256[4]",
            },
          ],
          name: "passcodeVerifyTx",
          outputs: [
            {
              internalType: "bool",
              name: "r",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "a",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "X",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "Y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "b",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "c",
                  type: "tuple",
                },
              ],
              internalType: "struct RecoveryVerifier.Proof",
              name: "proof",
              type: "tuple",
            },
            {
              internalType: "uint256[6]",
              name: "input",
              type: "uint256[6]",
            },
          ],
          name: "recoveryVerifyTx",
          outputs: [
            {
              internalType: "bool",
              name: "r",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "a",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "X",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "Y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG2Point",
                  name: "b",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "X",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "Y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct PasscodePairing.PasscodeG1Point",
                  name: "c",
                  type: "tuple",
                },
              ],
              internalType: "struct PasscodeVerifier.PasscodeProof",
              name: "proof",
              type: "tuple",
            },
          ],
          name: "verifyVUZIPassword",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        VUZINameToDetails: "contracts/VUZIStorage.sol",
        getVuzi: "contracts/VUZIStorage.sol",
        isTrustedForwarder: "@openzeppelin/contracts/metatx/ERC2771Context.sol",
        passcodeVerifyTx: "contracts/verifier/PasscodeVerifier.sol",
        recoveryVerifyTx: "contracts/verifier/RecoveryVerifier.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
